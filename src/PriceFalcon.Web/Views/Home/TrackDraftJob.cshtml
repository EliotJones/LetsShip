@model PriceFalcon.Web.ViewModels.Home.TrackDraftJobViewModel

<div id="track-container">
    <div class="row progress-row">
        <div class="two columns offset-by-one progress-icon">
            <object type="image/svg+xml" class="track-status-icon" data="/images/star.svg" width="32"></object>
        </div>
        <div class="eight columns">
            Job to crawl website (@Model.Website) was created.
        </div>
    </div>
    <div id="track-items-holder">
    </div>
    <div class="row progress-row" id="next-running">
        <div class="two columns offset-by-one progress-icon">
            <div class="lds-dual-ring"></div>
        </div>
        <div class="eight columns" id="next-running-text">
            Your job will be picked up and processed by the next available worker.
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        var recorded = [];
        var updatedLoadingText = false;

        function imageFor(link) {
            return "<object type='image/svg+xml' class='track-status-icon' data='" + link + "' width='32'></object>";
        }

        function displayForStatusItem(item) {
            var img = "";
            if (item.status === 1 || item.status === 2) {
                img = imageFor("/images/clock.svg");
            } else if (item.status === 3) {
                img = imageFor("/images/cloud-download.svg");
            } else if (item.status === 4) {
                img = imageFor("/images/circle-check.svg");
            }

            var status = "<div class='two columns offset-by-one progress-icon'>" + img + "</div>";
            var message = "<div class='eight columns'>" + item.message + "</div>";
            return "<div class='row progress-row'>" + status + message + "</div>";
        }

        function onTrackLoaded(data) {
            var completed = data.find(x => x.status === 4);
            var failed = data.find(x => x.status === 5);
            if (!!completed || !!failed) {
                clearInterval(document.price_falcon_timer);
                $("#next-running").remove();
            }

            if (!updatedLoadingText) {
                var hasQueuedOrProcessing = !!data.find(x => x.status === 2 || x.status === 3);
                if (hasQueuedOrProcessing) {
                    $("#next-running-text").text('Your job is being processed.');
                }
            }

            var str = data.filter(x => !recorded.find(r => r === x.message)).map(displayForStatusItem).join('');

            recorded = data.map(x => x.message);

            $("#track-items-holder").append(str);

            if (!!completed) {
                $("#track-container").after("<a href='@Url.Action("SelectDraftJobItem", new {token = Model.Token})' id='next-step-link'>Next step</a>");
            }
        }

        $(function() {
            document.price_falcon_timer = setInterval(function() {
                    $.getJSON('/create/track/@Model.Token', onTrackLoaded);
                },
                1500);
        });
    </script>
}